@namespace OmneSoft.Components.UI

<button class="@GetButtonClasses()" 
        disabled="@IsDisabled"
        @onclick="OnClick"
        @attributes="AdditionalAttributes">
    @if (IsLoading)
    {
        <div class="animate-spin rounded-full h-4 w-4 border-b-2 border-current mr-2"></div>
    }
    @ChildContent
</button>

@code {
    [Parameter] public RenderFragment? ChildContent { get; set; }
    [Parameter] public EventCallback OnClick { get; set; }
    [Parameter] public ButtonVariant Variant { get; set; } = ButtonVariant.Primary;
    [Parameter] public ButtonSize Size { get; set; } = ButtonSize.Medium;
    [Parameter] public bool IsLoading { get; set; }
    [Parameter] public bool IsDisabled { get; set; }
    [Parameter(CaptureUnmatchedValues = true)] public Dictionary<string, object>? AdditionalAttributes { get; set; }

    private string GetButtonClasses()
    {
        var baseClasses = "inline-flex items-center justify-center font-semibold rounded-lg transition-all duration-200 disabled:opacity-50 disabled:cursor-not-allowed";
        
        var variantClasses = Variant switch
        {
            ButtonVariant.Primary => "bg-indigo-600 hover:bg-indigo-700 text-white transform hover:scale-105",
            ButtonVariant.Secondary => "bg-gray-200 hover:bg-gray-300 text-gray-700",
            ButtonVariant.Success => "bg-green-600 hover:bg-green-700 text-white",
            ButtonVariant.Danger => "bg-red-600 hover:bg-red-700 text-white",
            _ => "bg-indigo-600 hover:bg-indigo-700 text-white"
        };

        var sizeClasses = Size switch
        {
            ButtonSize.Small => "px-3 py-2 text-sm",
            ButtonSize.Medium => "px-6 py-3",
            ButtonSize.Large => "px-8 py-4 text-lg",
            _ => "px-6 py-3"
        };

        return $"{baseClasses} {variantClasses} {sizeClasses}";
    }

    public enum ButtonVariant
    {
        Primary,
        Secondary,
        Success,
        Danger
    }

    public enum ButtonSize
    {
        Small,
        Medium,
        Large
    }
}